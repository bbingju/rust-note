#+TITLE: Rust Note
#+AUTHOR: Phil Hwang
#+EMAIL: pjhwang@gmail.com

#+SETUPFILE: theme-readtheorg.setup
#+STARTUP: show2levels

#+LATEX_COMPILER: xelatex
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [a4paper,11pt]
#+LATEX_HEADER: \usepackage{kotex}
#+LATEX_HEADER: \usepackage{a4wide}
#+LATEX_HEADER: \usepackage{listings}
# #+LATEX_HEADER: \usepackage{minted}
# #+LaTeX_HEADER: \setmainhangulfont{HCR Batang LVT}
#+LATEX_HEADER: \setmainhangulfont{Noto Sans CJK KR}

* 개발환경

- 간단한 코드 테스트는 [[https://play.rust-lang.org/][Rust Playground]]에서 할 수 있다.
- 프로그래밍에 필요한 여러 부가정보는 [[https://forge.rust-lang.org/index.html][Rust Forge]]에서 확인할 수 있다.

** Toolchains

*** Command Line Tools

유닉스 계열 운영체제는 다음과 같이 [[https://static.rust-lang.org/rustup/rustup-init.sh][=rustup-init.sh=]] 스크립트를 내려받은 후 실행시켜 설치할 수 있다.

#+ATTR_LATEX: :options frame=single
#+begin_src shell
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
#+end_src

이 방법으로 플랫폼에 맞는 =rustup= 명령을 설치할 수 있다. =rustup= 은 일종의 패키지 매니저이며, 이것을 통해 실제 Rust용 툴체인들을 설치할 수 있다.

**** =rustup=

설치된 패키지들을 업데이트하려면 다음과 같이 명령한다.

#+begin_src shell :results output :exports both :options frame=single
  rustup update
#+end_src

#+RESULTS:
: 
:   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.65.0 (897e37553 2022-11-02)
: 


로컬로 문서를 보고 싶다면 다음과 같이 명령한다.

#+begin_src shell
  rustup doc
#+end_src

#+RESULTS:

** Editors

*** Emacs

Emacs로 Rust 언어를 프로그래밍 하는 기본적인 방법은 [[https://github.com/rust-lang/rust-mode][=rust-mode=]] 을 설치하는 것이다. 필요할 경우, [[https://emacs-lsp.github.io/lsp-mode/page/lsp-rust-analyzer/][LSP Mode]]나 [[https://emacs-tree-sitter.github.io/][tree-sitter]]를 고민해 볼 수 있다.

* 사실들

** Immutable variables과 Constants의 차이점

- 둘 다 변하지 않는 값을 표현하는 방식이지만, Constants는 ~mut~ 을 붙여서 mutable 하게 만들 수 없음.
- Constants는 ~let~ 을 쓸 수 없고 ~const~ 를 붙이며, 해당 값의 타입은 항상 annotate 해야함.

* Projects

** [[https://github.com/sharkdp/bat.git][bat]]

** [[https://github.com/ClementTsang/bottom][bottom]]

** [[https://github.com/ogham/dog][dog]]

** [[https://github.com/bootandy/dust][dust]]

** [[https://github.com/ogham/exa][exa]]

* See Also
- [[https://doc.rust-lang.org/][Rust Documentations]] ([[https://doc.rust-lang.org/std/index.html][Standard Library References]])
- [[https://play.rust-lang.org/][Rust Playground]]
- [[https://dhghomon.github.io/easy_rust/][Easy Rust]] ([[https://github.com/Dhghomon/easy_rust][github]], [[https://www.youtube.com/watch?v=W9DO6m8JSSs&list=PLfllocyHVgsSJf1zO6k6o3SX2mbZjAqYE][youtube 한국어]])

